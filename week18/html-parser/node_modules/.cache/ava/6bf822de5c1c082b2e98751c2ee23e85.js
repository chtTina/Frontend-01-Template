"use strict";

var _parser = require("../src/parser.js");

var _ava = _interopRequireDefault(require("ava"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

(0, _ava["default"])("parse a single element", function (t) {
  var doc = (0, _parser.parseHTML)("<div></div>");
  var div = doc.children[0];

  if (div.tagName == "div") {
    t.pass();
  }

  if (div.children.length === 0) {
    t.pass();
  }

  if (div.type === "element") {
    t.pass();
  }

  if (div.attributes.length === 2) {
    t.pass();
  }
});
(0, _ava["default"])("parse a single element with text content", function (t) {
  var doc = (0, _parser.parseHTML)("<div>hello</div>");
  var text = doc.children[0].children[0];

  if (text.content === "hello") {
    t.pass();
  }

  if (text.type === "text") {
    t.pass();
  }
});
(0, _ava["default"])("tag mismatch", /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(t) {
    var doc;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return (0, _parser.parseHTML)("<div></div>");

          case 3:
            doc = _context.sent;
            console.log(doc);
            _context.next = 10;
            break;

          case 7:
            _context.prev = 7;
            _context.t0 = _context["catch"](0);
            // if (e.message === "Tag start end doesn't match!") {
            // }
            t.is(_context.t0.message, "Tag start end doesn't match!");

          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 7]]);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}());
//# sourceMappingURL=/Users/caihuiting/Desktop/前端学习资料/Github/week18/html-parser/node_modules/.cache/ava/6bf822de5c1c082b2e98751c2ee23e85.js.map