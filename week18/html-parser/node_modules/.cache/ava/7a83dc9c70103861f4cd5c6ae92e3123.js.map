{"version":3,"sources":["test/parser.test.js"],"names":["t","doc","div","children","tagName","pass","length","type","attributes","text","content","e","console","log","message"],"mappings":";;AAQA;;AACA;;;;AATA;;;;;;;;AAWA,qBAAK,wBAAL,EAA+B,UAACA,CAAD,EAAO;AACpC,MAAIC,GAAG,GAAG,uBAAU,aAAV,CAAV;AACA,MAAIC,GAAG,GAAGD,GAAG,CAACE,QAAJ,CAAa,CAAb,CAAV;;AACA,MAAID,GAAG,CAACE,OAAJ,IAAe,KAAnB,EAA0B;AACxBJ,IAAAA,CAAC,CAACK,IAAF;AACD;;AAED,MAAIH,GAAG,CAACC,QAAJ,CAAaG,MAAb,KAAwB,CAA5B,EAA+B;AAC7BN,IAAAA,CAAC,CAACK,IAAF;AACD;;AAED,MAAIH,GAAG,CAACK,IAAJ,KAAa,SAAjB,EAA4B;AAC1BP,IAAAA,CAAC,CAACK,IAAF;AACD;;AAED,MAAIH,GAAG,CAACM,UAAJ,CAAeF,MAAf,KAA0B,CAA9B,EAAiC;AAC/BN,IAAAA,CAAC,CAACK,IAAF;AACD;AACF,CAlBD;AAoBA,qBAAK,0CAAL,EAAiD,UAACL,CAAD,EAAO;AACtD,MAAIC,GAAG,GAAG,uBAAU,kBAAV,CAAV;AACA,MAAIQ,IAAI,GAAGR,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBA,QAAhB,CAAyB,CAAzB,CAAX;;AACA,MAAIM,IAAI,CAACC,OAAL,KAAiB,OAArB,EAA8B;AAC5BV,IAAAA,CAAC,CAACK,IAAF;AACD;;AACD,MAAII,IAAI,CAACF,IAAL,KAAc,MAAlB,EAA0B;AACxBP,IAAAA,CAAC,CAACK,IAAF;AACD;AACF,CATD;AAWA,qBAAK,cAAL,EAAqB,UAACL,CAAD,EAAO;AAC1B,MAAI;AACF,QAAMC,GAAG,GAAG,uBAAU,WAAV,CAAZ;AACD,GAFD,CAEE,OAAOU,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,OAAd;AACAd,IAAAA,CAAC,CAACK,IAAF;AACD;AACF,CAPD","sourceRoot":"/Users/caihuiting/Desktop/前端学习资料/Github/week18/html-parser","sourcesContent":["/*\n * @Descripttion:\n * @version:\n * @Author: tina.cai\n * @Date: 2020-08-16 23:41:27\n * @LastEditors: tina.cai\n * @LastEditTime: 2020-08-17 00:56:09\n */\nimport { parseHTML } from \"../src/parser.js\";\nimport test from \"ava\";\n\ntest(\"parse a single element\", (t) => {\n  let doc = parseHTML(\"<div></div>\");\n  let div = doc.children[0];\n  if (div.tagName == \"div\") {\n    t.pass();\n  }\n\n  if (div.children.length === 0) {\n    t.pass();\n  }\n\n  if (div.type === \"element\") {\n    t.pass();\n  }\n\n  if (div.attributes.length === 2) {\n    t.pass();\n  }\n});\n\ntest(\"parse a single element with text content\", (t) => {\n  let doc = parseHTML(\"<div>hello</div>\");\n  let text = doc.children[0].children[0];\n  if (text.content === \"hello\") {\n    t.pass();\n  }\n  if (text.type === \"text\") {\n    t.pass();\n  }\n});\n\ntest(\"tag mismatch\", (t) => {\n  try {\n    const doc = parseHTML(\"<div></p>\");\n  } catch (e) {\n    console.log(e.message);\n    t.pass();\n  }\n});\n"]}