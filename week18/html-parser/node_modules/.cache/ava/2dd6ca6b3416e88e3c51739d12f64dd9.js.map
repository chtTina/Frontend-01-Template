{"version":3,"sources":["test/parser.test.js"],"names":["t","doc","div","children","tagName","pass","length","type","attributes","text","content","e","message","attr","name","value","fail"],"mappings":";;AAQA;;AACA;;;;;;;;;;AAEA,qBAAK,wBAAL,EAA+B,UAACA,CAAD,EAAO;AACpC,MAAIC,GAAG,GAAG,uBAAU,aAAV,CAAV;AACA,MAAIC,GAAG,GAAGD,GAAG,CAACE,QAAJ,CAAa,CAAb,CAAV;;AACA,MAAID,GAAG,CAACE,OAAJ,IAAe,KAAnB,EAA0B;AACxBJ,IAAAA,CAAC,CAACK,IAAF;AACD;;AAED,MAAIH,GAAG,CAACC,QAAJ,CAAaG,MAAb,KAAwB,CAA5B,EAA+B;AAC7BN,IAAAA,CAAC,CAACK,IAAF;AACD;;AAED,MAAIH,GAAG,CAACK,IAAJ,KAAa,SAAjB,EAA4B;AAC1BP,IAAAA,CAAC,CAACK,IAAF;AACD;;AAED,MAAIH,GAAG,CAACM,UAAJ,CAAeF,MAAf,KAA0B,CAA9B,EAAiC;AAC/BN,IAAAA,CAAC,CAACK,IAAF;AACD;AACF,CAlBD;AAoBA,qBAAK,0CAAL,EAAiD,UAACL,CAAD,EAAO;AACtD,MAAIC,GAAG,GAAG,uBAAU,kBAAV,CAAV;AACA,MAAIQ,IAAI,GAAGR,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBA,QAAhB,CAAyB,CAAzB,CAAX;;AACA,MAAIM,IAAI,CAACC,OAAL,KAAiB,OAArB,EAA8B;AAC5BV,IAAAA,CAAC,CAACK,IAAF;AACD;;AACD,MAAII,IAAI,CAACF,IAAL,KAAc,MAAlB,EAA0B;AACxBP,IAAAA,CAAC,CAACK,IAAF;AACD;AACF,CATD;AAWA,qBAAK,cAAL,EAAqB,UAACL,CAAD,EAAO;AAC1B,MAAI;AACF,QAAMC,GAAG,GAAG,uBAAU,WAAV,CAAZ;AACD,GAFD,CAEE,OAAOU,CAAP,EAAU;AACV,QAAIA,CAAC,CAACC,OAAF,KAAc,8BAAlB,EAAkD;AAChDZ,MAAAA,CAAC,CAACK,IAAF;AACD;AACF;AACF,CARD;AAUA,qBAAK,aAAL,EAAoB,UAACL,CAAD,EAAO;AACzB,MAAMC,GAAG,GAAG,uBAAU,kBAAV,CAAZ;AACA,MAAIQ,IAAI,GAAGR,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBA,QAAhB,CAAyB,CAAzB,CAAX;;AACA,MAAIM,IAAI,CAACC,OAAL,KAAiB,OAArB,EAA8B;AAC5BV,IAAAA,CAAC,CAACK,IAAF;AACD;;AACD,MAAII,IAAI,CAACF,IAAL,KAAc,MAAlB,EAA0B;AACxBP,IAAAA,CAAC,CAACK,IAAF;AACD;AACF,CATD;AAWA,qBAAK,eAAL,EAAsB,UAACL,CAAD,EAAO;AAC3B,MAAMC,GAAG,GAAG,uBAAU,kBAAV,CAAZ;AACA,MAAIC,GAAG,GAAGD,GAAG,CAACE,QAAJ,CAAa,CAAb,CAAV;;AAF2B,6CAGVD,GAAG,CAACM,UAHM;AAAA;;AAAA;AAG3B,wDAAiC;AAAA,UAAxBK,IAAwB;;AAC/B,UAAIA,IAAI,CAACC,IAAL,KAAc,IAAlB,EAAwB;AACtB,YAAID,IAAI,CAACE,KAAL,KAAe,GAAnB,EAAwB;AACtBf,UAAAA,CAAC,CAACK,IAAF;AACA;AACD;AACF;AACF;AAV0B;AAAA;AAAA;AAAA;AAAA;;AAY3BL,EAAAA,CAAC,CAACgB,IAAF;AACD,CAbD","sourceRoot":"/Users/caihuiting/Desktop/前端学习资料/Github/week18/html-parser","sourcesContent":["/*\n * @Descripttion:\n * @version:\n * @Author: tina.cai\n * @Date: 2020-08-16 23:41:27\n * @LastEditors: tina.cai\n * @LastEditTime: 2020-08-17 01:06:26\n */\nimport { parseHTML } from \"../src/parser.js\";\nimport test from \"ava\";\n\ntest(\"parse a single element\", (t) => {\n  let doc = parseHTML(\"<div></div>\");\n  let div = doc.children[0];\n  if (div.tagName == \"div\") {\n    t.pass();\n  }\n\n  if (div.children.length === 0) {\n    t.pass();\n  }\n\n  if (div.type === \"element\") {\n    t.pass();\n  }\n\n  if (div.attributes.length === 2) {\n    t.pass();\n  }\n});\n\ntest(\"parse a single element with text content\", (t) => {\n  let doc = parseHTML(\"<div>hello</div>\");\n  let text = doc.children[0].children[0];\n  if (text.content === \"hello\") {\n    t.pass();\n  }\n  if (text.type === \"text\") {\n    t.pass();\n  }\n});\n\ntest(\"tag mismatch\", (t) => {\n  try {\n    const doc = parseHTML(\"<div></p>\");\n  } catch (e) {\n    if (e.message === \"Tag start end doesn't match!\") {\n      t.pass();\n    }\n  }\n});\n\ntest(\"test with <\", (t) => {\n  const doc = parseHTML(\"<div>a < b</div>\");\n  let text = doc.children[0].children[0];\n  if (text.content === \"a < b\") {\n    t.pass();\n  }\n  if (text.type === \"text\") {\n    t.pass();\n  }\n});\n\ntest(\"with property\", (t) => {\n  const doc = parseHTML(\"<div id=a></div>\");\n  let div = doc.children[0];\n  for (let attr of div.attributes) {\n    if (attr.name === \"id\") {\n      if (attr.value === \"a\") {\n        t.pass();\n        return;\n      }\n    }\n  }\n\n  t.fail();\n});\n"]}